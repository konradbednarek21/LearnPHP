<?php

namespace braga\wordgame\common\obj;

use braga\db\BusinesObject;
use braga\db\Collection;
use braga\wordgame\common\dao\UzytkownikDAO;
use braga\db\mysql\DB;
use braga\wordgame\backoffice\utils\Perms;

/**
 * Created on 17-09-2017 10:18:47
 *
 * @author Konrad Bednarek
 * @package FizWeb
 *          error prefix FW:104
 *          Generated by SimplePHPDAOClassGenerator ver 2.2.0
 *          https://sourceforge.net/projects/simplephpdaogen/
 *          {please complete documentation}
 */
class Uzytkownik extends UzytkownikDAO implements BusinesObject {
	// -------------------------------------------------------------------------
	const STATUS_OK = "OK";
	const STATUS_WYLACZONY = "WYLACZONY";
	const STATUS_ZABLOKOWANY = "ZABLOKOWANY";
	const STATUS_USUNIETY = "USUNIETY";
	// -------------------------------------------------------------------------
	protected $posiadanePrawa = null;
	// -------------------------------------------------------------------------
	public function getFullName() {
		return $this->getImie () . " " . $this->getNazwisko ();
	}
	// -------------------------------------------------------------------------
	/**
	 * Methods validate data before save
	 *
	 * @return boolean
	 */
	protected function check() {
		// TODO: add special validate
		return true;
	}
	// -------------------------------------------------------------------------
	public function czyPosiadaPrawo(Modul $m) {
		$p = $this->getWaznePrawa ();
		return isset ( $p [$m->getIdModul ()] );
	}
	// -------------------------------------------------------------------------
	public function getWaznePrawa() {
		$this->posiadanePrawa = array ();
		foreach ( PrawaModul::getAllWazneByUzytkownik ( $this ) as $p)/* @var $p PrawaModul */
		{
			$this->posiadanePrawa [$p->getIdModul ()] = $p;
		}
		return $this->posiadanePrawa;
	}
	// -------------------------------------------------------------------------
	public static function getCurrent() {
		return Perms::getCurrentUser ();
	}
	// -------------------------------------------------------------------------
	/**
	 * Method saves the object of the class Uzytkownik
	 *
	 * @return boolean
	 */
	public function save() {
		// TODO: please set atrib independens of clients ex lastupdate
		if ($this->check ()) {
			if ($this->isReaded ()) {
				return $this->update ();
			} else {
				return $this->create ();
			}
		} else {
			return false;
		}
	}
	// -------------------------------------------------------------------------
	/**
	 * Method removes an object of class Uzytkownik
	 *
	 * @return boolean
	 */
	public function kill() {
		// TODO: this method may be changed when record can not be deleted from table
		return $this->destroy ();
	}
	// -------------------------------------------------------------------------
	/**
	 * This method returns a collection of objects
	 *
	 * @return Collection &lt;Uzytkownik&gt;
	 */
	public static function getAll() {
		// TODO: this is example of method selecting multi rec from table
		$db = new DB ();
		$sql = "SELECT * ";
		$sql .= "FROM " . DB_SCHEMA . ".uzytkownik ";
		$db->query ( $sql );
		return new Collection ( $db, self::get () );
	}
	// ---------------------------------------------------
	static public function login($nazwaKonta, $hasloDoKonta) {
		$db = new DB ();
		$sql = "SELECT * ";
		$sql .= "FROM " . DB_SCHEMA . ".uzytkownik ";
		$sql .= "WHERE email = :LOGIN";
		$db->setParam ( 'LOGIN', $nazwaKonta );
		$db->query ( $sql );
		if ($db->nextRecord ()) {
			$uzytkownik = self::getByDataSource ( $db );
			if ($uzytkownik->getStatus () == Uzytkownik::STATUS_OK) {
				if ($uzytkownik->getHaslo () == getHashPass ( $hasloDoKonta )) {
					return $uzytkownik;
				} else {
					addAlert ( "DY:11512 Nieprawidlowe dane logowania" );
					return null;
				}
			} else {
				addAlert ( "DY:11513 Nieprawidlowe dane logowania" );
				return null;
			}
		} else {
			addAlert ( "DY:11514 Nieprawidlowe dane logowania" );
			return null;
		}
	}
	// -------------------------------------------------------------------------
}
?>
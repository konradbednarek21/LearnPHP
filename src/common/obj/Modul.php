<?php

namespace braga\wordgame\common\obj;

use braga\db\BusinesObject;
use braga\db\Collection;
use braga\wordgame\common\dao\ModulDAO;
use braga\db\mysql\DB;
use braga\wordgame\backoffice\utils\Perms;

/**
 * Created on 17-09-2017 10:15:44
 *
 * @author Konrad Bednarek
 * @package FizWeb
 *          error prefix FW:102
 *          Generated by SimplePHPDAOClassGenerator ver 2.2.0
 *          https://sourceforge.net/projects/simplephpdaogen/
 *          {please complete documentation}
 */
class Modul extends ModulDAO implements BusinesObject {
	const START = 0;
	const ADMIN = 1;
	const CONTENT = 2;
	// -------------------------------------------------------------------------
	/**
	 * Methods validate data before save
	 *
	 * @return boolean
	 */
	protected function check() {
		// TODO: add special validate
		return true;
	}
	// -------------------------------------------------------------------------
	/**
	 * Method saves the object of the class Modul
	 *
	 * @return boolean
	 */
	public function save() {
		// TODO: please set atrib independens of clients ex lastupdate
		if ($this->check ()) {
			if ($this->isReaded ()) {
				return $this->update ();
			} else {
				return $this->create ();
			}
		} else {
			return false;
		}
	}
	// -------------------------------------------------------------------------
	static public function getCurrent() {
		return Perms::getCurentModul ();
	}
	// -------------------------------------------------------------------------
	/**
	 * Method removes an object of class Modul
	 *
	 * @return boolean
	 */
	public function kill() {
		// TODO: this method may be changed when record can not be deleted from table
		return $this->destroy ();
	}
	// -------------------------------------------------------------------------
	/**
	 * This method returns a collection of objects
	 *
	 * @return Collection &lt;Modul&gt;
	 */
	public static function getAll() {
		// TODO: this is example of method selecting multi rec from table
		$db = new DB ();
		$sql = "SELECT * ";
		$sql .= "FROM " . DB_SCHEMA . ".modul ";
		$db->query ( $sql );
		return new Collection ( $db, self::get () );
	}
	// -------------------------------------------------------------------------
}
?>